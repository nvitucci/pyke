# $Id: bc_related.krb 9f7068449a4b 2010-03-08 mtnyogi $
# 
# Copyright Â© 2007-2008 Bruce Frederiksen
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

direct_father_son
    use father_son($father, $son, ())
    when
        family2.son_of($son, $father)

grand_father_son
    use father_son($grand_father, $grand_son, (grand))
    when
        father_son($father, $grand_son, ())
        father_son($grand_father, $father, ())

great_grand_father_son
    use father_son($gg_father, $gg_son, (great, $prefix1, *$rest_prefixes))
    when
        father_son($father, $gg_son, ())
        father_son($gg_father, $father, ($prefix1, *$rest_prefixes))

brothers
    use brothers($brother1, $brother2)
    when
        father_son($father, $brother1, ())
        father_son($father, $brother2, ())
        check $brother1 != $brother2

uncle_nephew
    use uncle_nephew($uncle, $nephew, $prefix)
    when
        brothers($uncle, $father)
        father_son($father, $nephew, $prefix1)
        $prefix = ('great',) * len($prefix1)

cousins
    use cousins($cousin1, $cousin2, $distance, $removed)
    when
        uncle_nephew($uncle, $cousin1, $prefix1)
        father_son($uncle, $cousin2, $prefix2)
        $distance = min(len($prefixes1), len($prefixes2)) + 1
        $removed = abs(len($prefixes1) - len($prefixes2))

